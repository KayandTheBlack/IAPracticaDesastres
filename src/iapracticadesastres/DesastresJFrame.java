/*
 * ProbTSPJFrame.java
 *
 * Created on 4 de agosto de 2005, 23:18
 */

package iapracticadesastres;

import java.util.List;

import aima.search.framework.Problem;
import aima.search.framework.Search;
import aima.search.framework.SearchAgent;
import aima.search.informed.HillClimbingSearch;
import aima.search.informed.SimulatedAnnealingSearch;

import javax.swing.text.NumberFormatter;
import javax.swing.text.DefaultFormatterFactory;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;

/**
 *
 * @author  javier
 */
public class DesastresJFrame extends javax.swing.JFrame {
    
    /**
     *
     */
    private static final long serialVersionUID = -8877491224336005353L;
    private int nc;
    
    /** Creates new form ProbTSPJFrame */
    public DesastresJFrame() {
        
        
        numForm=DecimalFormat.getInstance();
        numForm.setParseIntegerOnly(true);
        numForm.setGroupingUsed(false);
        nfor=new NumberFormatter(numForm);
        nfor.setAllowsInvalid(false);
        formSeed = new DefaultFormatterFactory(nfor,nfor,nfor);
        
        
        numForm=DecimalFormat.getNumberInstance();
        numForm.setParseIntegerOnly(false);
        ((DecimalFormat) numForm).applyPattern("#####.#######");
        ((DecimalFormat) numForm).setDecimalSeparatorAlwaysShown(true);
        numForm.setGroupingUsed(false);
        nfor=new NumberFormatter(numForm);
        nfor.setAllowsInvalid(false);
        formLambda= new DefaultFormatterFactory(nfor,nfor,nfor);
        
        //initComponents();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */


    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {                                      
// TODO add your handling code here:
        dispose();
    }                                     
    
    private void ejecutarPrBActionPerformed(java.awt.event.ActionEvent evt) {                                            
// TODO add your handling code here:
        //try{
            
            /*
            int sm=numForm.parse(SemillaTF.getText()).intValue();
            nc=CiudadesS.getValue();
            hillClimbTA.setText("");
            annealingTA.setText("");
            DesastresBoard TSPB=new DesastresBoard(nc,sm);
            TSPHillClimbingSearch(TSPB,hillClimbTA);
            TSPSimulatedAnnealingSearch(TSPB,annealingTA);*/
        //} catch (ParseException e) {}
    }                                           
    
    private void ejecutarBMousePressed(java.awt.event.MouseEvent evt) {                                       
// TODO add your handling code here:
        
        nc=CiudadesS.getValue();
        hillClimbTA.setText("");
        annealingTA.setText("");
        DesastresBoard TSPB=new DesastresBoard(nc,0,0,0);
        TSPHillClimbingSearch(TSPB,hillClimbTA);
        TSPSimulatedAnnealingSearch(TSPB,annealingTA);
    }                                      
        
    private void TSPHillClimbingSearch(DesastresBoard TSPB, java.awt.TextArea a) {
        //System.out.println("\nTSP HillClimbing  -->");
        try {
            Problem problem =  new Problem(TSPB,new DesastresSuccessorFunction(), new DesastresGoalTest(),new DesastresHeuristicFunction());
            Search search =  new HillClimbingSearch();
            SearchAgent agent = new SearchAgent(problem,search);
            
            //System.out.println();
            printActions(agent.getActions(),a);
            // printInstrumentation(agent.getInstrumentation());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void TSPSimulatedAnnealingSearch(DesastresBoard TSPB, java.awt.TextArea a) {
        //System.out.println("\nTSP Simulated Annealing  -->");
        try {
            Problem problem =  new Problem(TSPB,new DesastresSuccessorFunctionSA(), new DesastresGoalTest(),new DesastresHeuristicFunction());
            SimulatedAnnealingSearch search =  new SimulatedAnnealingSearch(NiterS.getValue(),1000,ParKS.getValue(),numForm.parse(LambdaFT.getText()).doubleValue());
            //search.traceOn();
            SearchAgent agent = new SearchAgent(problem,search);
            
            printActions(agent.getActions(),a);
            //printInstrumentation(agent.getInstrumentation());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void printActions(List actions, java.awt.TextArea a) {
        for (int i = 0; i < actions.size(); i++) {
            String action = (String) actions.get(i);
            // System.out.println(action);
            a.append(action+"\n");
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DesastresJFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JLabel AnnealingL;
    private javax.swing.JLabel AnnealingPL;
    private javax.swing.JSlider CiudadesS;
    private javax.swing.JLabel HillClimbingL;
    private javax.swing.JFormattedTextField LambdaFT;
    private javax.swing.JLabel LambdaL;
    private javax.swing.JLabel NiterL;
    private javax.swing.JSlider NiterS;
    private javax.swing.JLabel ParKL;
    private javax.swing.JSlider ParKS;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JLabel SemillaL;
    private javax.swing.JFormattedTextField SemillaTF;
    private java.awt.TextArea annealingTA;
    private java.awt.Label ciudadesL;
    private javax.swing.JButton ejecutarB;
    private javax.swing.JButton ejecutarPrB;
    private java.awt.TextArea hillClimbTA;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration                   
    private NumberFormat numForm;
    private NumberFormatter nfor;
    private DefaultFormatterFactory formSeed;
    private DefaultFormatterFactory formLambda;
    
}